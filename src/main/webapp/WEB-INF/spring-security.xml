<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
			http://www.springframework.org/schema/mvc/spring-mvc.xsd
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/security  
            http://www.springframework.org/schema/security/spring-security.xsd 
            http://www.springframework.org/schema/tx 
		    http://www.springframework.org/schema/tx/spring-tx.xsd ">



<context:property-placeholder location="classpath:META-INF/local.properties" />
	<!--Local -->
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="${db.driver}" />
		<beans:property name="url" value="${production.db.url}" />
		<beans:property name="username" value="${production.db.username}" />
		<beans:property name="password" value="${production.db.password}" />
	</beans:bean>


	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernateAnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.ssl.model.AsinModel</beans:value>
				<beans:value>com.ssl.model.SchemePriceModel</beans:value>
				<beans:value>com.ssl.model.SalesDataModel</beans:value>
				<beans:value>com.ssl.model.UserModel</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>

				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>


				<beans:prop key="hibernate.hbm2ddl.auto">${database.create.update.action}</beans:prop>

			</beans:props>
		</beans:property>
	</beans:bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="hibernateAnnotatedSessionFactory" />
	</beans:bean>






	<!--End -->



	<!-- /ssl-data-tool/src/main -->
	<!-- <import resource="WEB-INF/spring/servlet-context.xml" /> -->

	<beans:bean id="userDaoImpl" class="com.ssl.dao.impl.UserDaoImpl">
		<beans:property name="sessionFactory" ref="hibernateAnnotatedSessionFactory" />
	</beans:bean>

	<beans:bean id="customAuthentication"
		class="com.ssl.security.CustomAuthenticationProvider">
		<beans:property name="userDaoImpl" ref="userDaoImpl"></beans:property>
	</beans:bean>
	<beans:bean id="authSuccessHandler"
		class="com.ssl.security.CustomAuthenticationSuccessHandler">
		<beans:property name="userDaoImpl" ref="userDaoImpl"></beans:property>
	</beans:bean>


	<sec:http auto-config="true" use-expressions="true">

		<sec:intercept-url pattern="/login" access="permitAll" />
		<!-- DeskTop Pages -->
		<sec:intercept-url pattern="/home" access="hasRole('ROLE_ADMIN')" />
		<sec:intercept-url pattern="/asinSearch" access="hasRole('ROLE_ADMIN')" />
		<sec:intercept-url pattern="/schmePriceSearch" access="hasRole('ROLE_ADMIN')" />
		<sec:intercept-url pattern="/getAsinData" access="hasRole('ROLE_ADMIN')" />
		<sec:intercept-url pattern="/getShemePriceData" access="hasRole('ROLE_ADMIN')" />
		
		<sec:intercept-url pattern="/getPriceData" access="hasRole('ROLE_ADMIN')" />
		
		
		<sec:intercept-url pattern="/getRecords" access="hasRole('ROLE_ADMIN')" />

		<sec:intercept-url pattern="/uploadPrice" access="hasRole('ROLE_ADMIN')" />
		<sec:intercept-url pattern="/uploadAsin" access="hasRole('ROLE_ADMIN')" />
		<sec:intercept-url pattern="/uploadSalesReport"
			access="hasRole('ROLE_ADMIN')" />
		<sec:intercept-url pattern="/getAsinData" access="hasRole('ROLE_ADMIN')" />
		<sec:intercept-url pattern="/downloadCSV" access="hasRole('ROLE_ADMIN')" />
		<sec:intercept-url pattern="/downloadSalesData"
			access="hasRole('ROLE_ADMIN')" />
		<sec:intercept-url pattern="/submitDate" access="hasRole('ROLE_ADMIN')" />
		<sec:intercept-url pattern="/downloadPriceFeed"
			access="hasRole('ROLE_ADMIN')" />
		<sec:intercept-url pattern="/downloadAsinCsv"
			access="hasRole('ROLE_ADMIN')" />
		<sec:intercept-url pattern="/downLoadSuccessorErrorPrice"
			access="hasRole('ROLE_ADMIN')" />
		<sec:intercept-url pattern="/downLoadSuccessorErrorAsin"
			access="hasRole('ROLE_ADMIN')" />
			<sec:intercept-url pattern="/downloadSearchScheme"
			access="hasRole('ROLE_ADMIN')" />


		<sec:form-login login-page="/login"
			authentication-success-handler-ref="authSuccessHandler"
			always-use-default-target="true" authentication-failure-url="/login?login_error=1"
			username-parameter="username" password-parameter="password" />

		<sec:logout logout-success-url="/login?logout=1"
			logout-url="/logout" invalidate-session="true" />

		<sec:headers>
			<sec:cache-control />
			<sec:hsts />
		</sec:headers>

	</sec:http>

	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider ref="customAuthentication">
		</sec:authentication-provider>
	</sec:authentication-manager>



</beans:beans>